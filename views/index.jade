extends layout


block content
	h1.
		Acumulado de telefonos
	h2.
		La barra azul es el total de registros del estado correspondiente en la base de datos. La barra verde indica el porcentaje estimado segun los resultados del INEGI de usuarios que utilizan telefonía móvil.
	div(id= "chart")
	script(src="http://d3js.org/d3.v2.min.js")
	script.
		function renderChart() {
		var data = JSON.parse('!{registers}');
		var valueLabelWidth = 40; // space reserved for value labels (right)
		var barHeight = 20; // height of one bar
		var barLabelWidth = 100; // space reserved for bar labels
		var barLabelPadding = 5; // padding between bar and bar labels (left)
		var gridLabelHeight = 18; // space reserved for gridline labels
		var gridChartOffset = 3; // space between start of grid and first bar
		var maxBarWidth = 420; // width of the bar with the max value
		 
		// accessor functions 
		var barLabel = function(d) { return d['_id']; };
		var barValue = function(d) { return parseFloat(d['total']); };
		var barValuePib = function(d) { console.log("Pib" + d['pib']);var dist= parseFloat(d['pib']) /10000;return (Number.isNaN(dist))?0:dist; };
		var barValuePT = function(d) { console.log("PT" + d['pt']);var dist= parseFloat(d['pt']) * parseFloat(d['total']) /100;return (Number.isNaN(dist))?0:dist;};
		// scales
		var yScale = d3.scale.ordinal().domain(d3.range(0, data.length)).rangeBands([0, data.length * barHeight]);
		var y = function(d, i) { return yScale(i); };
		var yText = function(d, i) { return y(d, i) + yScale.rangeBand() / 2; };
		var x = d3.scale.linear().domain([0, d3.max(data, barValue)]).range([0, maxBarWidth]);
		// svg container element
		var chart = d3.select('#chart').append("svg")
		  .attr('width', maxBarWidth + barLabelWidth + valueLabelWidth)
		  .attr('height', gridLabelHeight + gridChartOffset + data.length * barHeight);
		// grid line labels
		var gridContainer = chart.append('g')
		  .attr('transform', 'translate(' + barLabelWidth + ',' + gridLabelHeight + ')'); 
		gridContainer.selectAll("text").data(x.ticks(10)).enter().append("text")
		  .attr("x", x)
		  .attr("dy", -3)
		  .attr("text-anchor", "middle")
		  .text(String);
		// vertical grid lines
		gridContainer.selectAll("line").data(x.ticks(10)).enter().append("line")
		  .attr("x1", x)
		  .attr("x2", x)
		  .attr("y1", 0)
		  .attr("y2", yScale.rangeExtent()[1] + gridChartOffset)
		  .style("stroke", "#ccc");
		// bar labels
		var labelsContainer = chart.append('g')
		  .attr('transform', 'translate(' + (barLabelWidth - barLabelPadding) + ',' + (gridLabelHeight + gridChartOffset) + ')'); 
		labelsContainer.selectAll('text').data(data).enter().append('text')
		  .attr('y', yText)
		  .attr('stroke', 'none')
		  .attr('fill', 'black')
		  .attr("dy", ".35em") // vertical-align: middle
		  .attr('text-anchor', 'end')
		  .text(barLabel);
		// bars
		var barsContainer = chart.append('g')
		  .attr('transform', 'translate(' + barLabelWidth + ',' + (gridLabelHeight + gridChartOffset) + ')'); 
		barsContainer.selectAll("rect").data(data).enter().append("rect")
		  .attr('y', y)
		  .attr('height', yScale.rangeBand() )
		  .attr('width', function(d) { return x(barValue(d)); })
		  .attr('stroke', 'white')
		  .attr('fill', 'blue');
		  // bars pt
		var barsContainer = chart.append('g')
		  .attr('transform', 'translate(' + barLabelWidth + ',' + (gridLabelHeight + gridChartOffset) + ')'); 
		barsContainer.selectAll("rect").data(data).enter().append("rect")
		  .attr('y', y)
		  .attr('height', yScale.rangeBand())
		  .attr('width', function(d) { return x(barValuePT(d)); })
		  .attr('stroke', 'white')
		  .attr('fill', 'green');
		// bar value labels
		barsContainer.selectAll("text").data(data).enter().append("text")
		  .attr("x", function(d) { return x(barValue(d)); })
		  .attr("y", yText)
		  .attr("dx", 3) // padding-left
		  .attr("dy", ".35em") // vertical-align: middle
		  .attr("text-anchor", "start") // text-align: right
		  .attr("fill", "black")
		  .attr("stroke", "none")
		  .text(function(d) { return d3.round(barValue(d), 2); });
		// start line
		barsContainer.append("line")
		  .attr("y1", -gridChartOffset)
		  .attr("y2", yScale.rangeExtent()[1] + gridChartOffset)
		  .style("stroke", "#000");

		}
	script.
		renderChart();